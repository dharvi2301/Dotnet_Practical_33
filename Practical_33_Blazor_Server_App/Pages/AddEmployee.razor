@page "/add/employee"
@using Practical_33_Blazor_Server_App.Model
@using Practical_33_Blazor_Server_App.Repository
@inject IEmployeeRepository employeeRepo
@inject NavigationManager Navigation
@inject IJSRuntime js

<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Add New Employee</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@employee" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <InputText class="form-control" @bind-Value="employee.Name" />
                    <ValidationMessage For="@(() => employee.Name)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText type="email" class="form-control" @bind-Value="employee.Email" />
                    <ValidationMessage For="@(() => employee.Email)" />
                </div>

                <div class="mb-3">
                    <label>Department</label>
                    <InputSelect class="form-control" @bind-Value="employee.Department">
                        <option value="">-- Select Department --</option>
                        @foreach (var dept in Departments)
                        {
                            <option value="@dept">@dept</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => employee.Department)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Salary</label>
                    <InputNumber class="form-control" @bind-Value="employee.Salary" />
                    <ValidationMessage For="@(() => employee.Salary)" />
                </div>

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-plus-circle"></i> Add Employee
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">
                        <i class="bi bi-x-circle"></i> Cancel
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private EmployeeModel employee = new EmployeeModel();
    private List<string> Departments = new List<string>
    {
        "HR",
        "IT",
        "Sales",
        "Marketing",
        "Finance"
    };

    private async Task HandleValidSubmit()
    {
        

        bool confirm = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to add {employee.Name}?");
        if (confirm)
        {
            employeeRepo.AddEmployee(employee);
            Navigation.NavigateTo("/");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }
}
